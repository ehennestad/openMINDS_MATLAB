classdef FileBundle < openminds.abstract.Schema
%FileBundle - Structured information on a bundle of file instances.
%
%   PROPERTIES:
%
%   IRI         : (1,1) string
%                 Enter the internationalized resource identifier (IRI) of this file bundle.
%
%   format      : (1,1) <a href="matlab:help openminds.core.ContentType" style="font-weight:bold">ContentType</a>
%                 Add the content type of this file bundle.
%
%   groupedBy   : (1,1) <a href="matlab:help openminds.controlledterms.FileBundleGrouping" style="font-weight:bold">FileBundleGrouping</a>
%                 Add the concept which was used to group file instances into this file bundle.
%
%   hash        : (1,1) <a href="matlab:help openminds.core.Hash" style="font-weight:bold">Hash</a>
%                 Add the hash that was generated for this file bundle.
%
%   isPartOf    : (1,1) <a href="matlab:help openminds.core.FileBundle" style="font-weight:bold">FileBundle</a>, <a href="matlab:help openminds.core.FileRepository" style="font-weight:bold">FileRepository</a>
%                 Add the file bundle or file repository this file bundle is a part of.
%
%   name        : (1,1) string
%                 Enter the name of this file bundle.
%
%   storageSize : (1,1) <a href="matlab:help openminds.core.QuantitativeValue" style="font-weight:bold">QuantitativeValue</a>
%                 Enter the storage size this file bundle allocates.

%   This class was auto-generated by the openMINDS pipeline

    properties
        % Enter the internationalized resource identifier (IRI) of this file bundle.
        IRI (1,1) string

        % Add the content type of this file bundle.
        format (1,:) openminds.core.ContentType ...
            {mustBeSpecifiedLength(format, 0, 1)}

        % Add the concept which was used to group file instances into this file bundle.
        groupedBy (1,:) openminds.controlledterms.FileBundleGrouping ...
            {mustBeSpecifiedLength(groupedBy, 0, 1)}

        % Add the hash that was generated for this file bundle.
        hash (1,:) openminds.core.Hash ...
            {mustBeSpecifiedLength(hash, 0, 1)}

        % Add the file bundle or file repository this file bundle is a part of.
        isPartOf (1,:) openminds.internal.mixedtype.filebundle.IsPartOf ...
            {mustBeSpecifiedLength(isPartOf, 0, 1)}

        % Enter the name of this file bundle.
        name (1,1) string

        % Enter the storage size this file bundle allocates.
        storageSize (1,:) openminds.core.QuantitativeValue ...
            {mustBeSpecifiedLength(storageSize, 0, 1)}
    end

    properties (Access = protected)
        Required = ["IRI", "isPartOf", "name"]
    end

    properties (Constant, Hidden)
        X_TYPE = "https://openminds.ebrains.eu/core/FileBundle"
    end

    properties (Constant, Hidden)
        LINKED_PROPERTIES = struct(...
            'format', "openminds.core.ContentType", ...
            'groupedBy', "openminds.controlledterms.FileBundleGrouping", ...
            'hash', "openminds.core.Hash", ...
            'isPartOf', ["openminds.core.FileBundle", "openminds.core.FileRepository"] ...
        )
        EMBEDDED_PROPERTIES = struct(...
            'storageSize', "openminds.core.QuantitativeValue" ...
        )
    end

    methods
        function obj = FileBundle(varargin)
            obj.assignPVPairs(varargin{:})
        end
    end

    methods (Access = protected)
        function str = getDisplayLabel(obj)
            str = sprintf('%s (%s)', obj.name, obj.groupedBy);
        end
    end

end